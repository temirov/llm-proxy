package proxy

const (
	headerAuthorization       = "Authorization"
	headerContentType         = "Content-Type"
	headerAccept              = "Accept"
	headerAuthorizationPrefix = "Bearer "

	queryParameterPrompt       = "prompt"
	queryParameterKey          = "key"
	queryParameterModel        = "model"
	queryParameterWebSearch    = "web_search"
	queryParameterSystemPrompt = "system_prompt"
	queryParameterFormat       = "format"

	mimeApplicationJSON = "application/json"
	mimeApplicationXML  = "application/xml"
	mimeTextXML         = "text/xml"
	mimeTextCSV         = "text/csv"
	mimeTextPlain       = "text/plain; charset=utf-8"

	errorMissingPrompt               = "missing prompt parameter"
	errorRequestTimedOut             = "request timed out"
	errorRequestBuild                = "request build error"
	errorOpenAIRequest               = "OpenAI request error"
	errorOpenAIAPI                   = "OpenAI API error"
	errorOpenAIAPINoText             = "OpenAI API error (no text)"
	errorOpenAIFailedStatus          = "OpenAI API error (failed status)"
	errorOpenAIModelValidation       = "OpenAI model validation error"
	errorWebSearchUnsupportedByModel = "web_search is not supported by the selected model"

	toolTypeWebSearch = "web_search"

	keyRole            = "role"
	keyUser            = "user"
	keySystem          = "system"
	keyContent         = "content"
	keyModel           = "model"
	keyInput           = "input"
	keyTemperature     = "temperature"
	keyMaxOutputTokens = "max_output_tokens"
	keyTools           = "tools"
	keyType            = "type"
	keyToolChoice      = "tool_choice"
	keyAuto            = "auto"

	jsonFieldID         = "id"
	jsonFieldStatus     = "status"
	jsonFieldOutputText = "output_text"

	statusCompleted = "completed"
	statusSucceeded = "succeeded"
	statusDone      = "done"
	statusCancelled = "cancelled"
	statusFailed    = "failed"
	statusErrored   = "errored"

	logFieldHTTPStatus   = "http_status"
	logFieldAPIStatus    = "api_status"
	logFieldLatencyMs    = "latency_ms"
	logFieldResponseText = "response_text"
	logFieldMethod       = "method"
	logFieldPath         = "path"
	logFieldClientIP     = "client_ip"
	logFieldStatus       = "status"
	logFieldValue        = "value"
	logFieldError        = "error"

	logEventOpenAIRequestError            = "OpenAI request error"
	logEventOpenAIResponse                = "OpenAI API response"
	logEventOpenAIModelsList              = "OpenAI models list"
	logEventOpenAIModelsListError         = "OpenAI models list error"
	logEventOpenAIPollError               = "OpenAI poll error"
	logEventForbiddenRequest              = "forbidden request"
	logEventRequestReceived               = "request received"
	logEventResponseSent                  = "response sent"
	logEventMarshalRequestPayload         = "marshal request payload failed"
	logEventBuildHTTPRequest              = "build HTTP request failed"
	logEventReadResponseBodyFailed        = "read response body failed"
	logEventRetryingWithoutParam          = "retrying without parameter"
	logEventParseWebSearchParameterFailed = "parse web_search parameter failed"

	responseRequestAttribute = "request"
)
